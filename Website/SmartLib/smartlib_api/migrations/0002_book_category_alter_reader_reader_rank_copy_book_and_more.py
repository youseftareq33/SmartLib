# Generated by Django 5.1.3 on 2024-11-07 21:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('smartlib_api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=255)),
                ('book_author', models.CharField(max_length=255)),
                ('book_type', models.CharField(max_length=255)),
                ('book_barcode', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'Book',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.AlterField(
            model_name='reader',
            name='reader_rank',
            field=models.CharField(default='Bronze', max_length=20),
        ),
        migrations.CreateModel(
            name='Copy_Book',
            fields=[
                ('copy_book_id', models.AutoField(primary_key=True, serialize=False)),
                ('mark', models.IntegerField(default=0)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.book')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'Copy_Book',
            },
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_description', models.CharField(max_length=255)),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'FeedBack',
            },
        ),
        migrations.CreateModel(
            name='Gamification_Record',
            fields=[
                ('gamification_record_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_and_time', models.DateTimeField(auto_now_add=True)),
                ('gamification_description', models.CharField(max_length=255)),
                ('achieved_point', models.IntegerField(default=0)),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'Gamification_Record',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('manager_id', models.AutoField(primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.user')),
            ],
            options={
                'db_table': 'Manager',
                'unique_together': {('manager_id', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('note_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_record', models.CharField(max_length=255)),
                ('copy_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.copy_book')),
            ],
            options={
                'db_table': 'Note',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('notification_record', models.CharField(max_length=255)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.manager')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='Preferences',
            fields=[
                ('preferences_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.category')),
                ('reader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'Preferences',
            },
        ),
        migrations.CreateModel(
            name='Rating_And_Review',
            fields=[
                ('rating_and_review_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(default=0)),
                ('review', models.CharField(max_length=255)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.book')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'Rating_And_Review',
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('search_id', models.AutoField(primary_key=True, serialize=False)),
                ('search_record', models.CharField(max_length=255)),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartlib_api.reader')),
            ],
            options={
                'db_table': 'Search',
            },
        ),
    ]
